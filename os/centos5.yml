---
- name: Ugly workaround for delegate_to bug in Ansible v1.8.4
  hosts: hypervisor
  remote_user: root
  gather_facts: no

  tasks:
  - setup:

- name: Create virtual images for Workshop
  hosts: os-centos5
  remote_user: root
  gather_facts: no

  vars:
    os_name: centos
    os_version: 5
    os_arch: i386
    centos_mirror: http://centos.cu.be/
    image_dir: /var/lib/libvirt/images
    boot_iso: '{{ os_name}}{{ os_version}}/{{ os_name }}{{ os_version }}-{{ os_arch }}.iso'
    vm_image: '{{ os_name}}{{ os_version}}/{{ os_name }}{{ os_version }}-{{ os_arch }}.qcow2.img'

  vars_files:
    - ../ssh-keys.yml

  tasks:
  - name: Revoke old keys
    command: ssh-keygen -R {{ ansible_ssh_host }}
    delegate_to: localhost

  - name: Create temporary directory
    command: mktemp -d /tmp/workshop.XXXXXXXXXX
    delegate_to: localhost
    register: tempdir

  - name: Template kickstart file
    template:
      src: '{{ os_name }}{{ os_version }}/ks.cfg'
      dest: '{{ tempdir.stdout }}/ks.cfg'
    delegate_to: localhost

  - name: Template syslinux bootloader config
    template:
      src: '{{ os_name }}{{ os_version }}/isolinux.cfg'
      dest: '{{ tempdir.stdout }}/isolinux.cfg'
    delegate_to: localhost

  - name: Download boot images
    get_url:
      url: '{{ centos_mirror }}/{{ os_version }}/os/{{ os_arch }}/{{ item }}'
      dest: '{{ tempdir.stdout }}'
    delegate_to: localhost
    with_items:
    - images/pxeboot/vmlinuz
    - images/pxeboot/initrd.img
    - isolinux/isolinux.bin

  - name: Create ISO boot image
    command: mkisofs -r -N -allow-leading-dots -d -J -T -b isolinux.bin -c boot.cat -no-emul-boot -V "Ansible workshop" -boot-load-size 4 -boot-info-table -o {{ boot_iso }} {{ tempdir.stdout }}
    delegate_to: localhost

  - name: Copy boot.iso to hypervisor
    copy:
      src: '{{ boot_iso }}'
      dest: '{{ image_dir }}/vm-noname.iso'
    delegate_to: hypervisor

  - name: Template VM configuration
    template:
      src: vm.xml
      dest: '{{ tempdir.stdout }}/{{ inventory_hostname }}.xml'
    delegate_to: hypervisor

  - name: Allocate storage
    qemu_img:
      dest: '{{ image_dir }}/{{ inventory_hostname }}.qcow2'
      size: 3072
      format: qcow2
    delegate_to: hypervisor

  - name: Create the VM
    virt_guest:
      guest: '{{ inventory_hostname }}'
      src: '{{ tempdir.stdout }}/{{ inventory_hostname }}.xml'
    delegate_to: hypervisor

  - name: Boot VM using boot ISO
    virt_boot:
      guest: '{{ inventory_hostname }}'
      boot: cdrom
      image: '{{ image_dir }}/vm-noname.iso'
    delegate_to: hypervisor

  - name: Clean up temporary directory
    file:
      dest: '{{ tempdir.stdout }}'
      state: absent
    delegate_to: localhost

  - name: Wait for the system to power off
    virt:
      guest: '{{ inventory_hostname }}'
      command: status
    register: result
    until: result.status == 'shutdown'
    retries: 150
    delay: 5
    delegate_to: hypervisor

  - name: Disable boot from ISO
    virt_boot:
      guest: '{{ inventory_hostname }}'
      boot: hd
      start: no
    delegate_to: hypervisor

#  - name: Wait for the reboot
#    wait_for:
#      host: '{{ ansible_ssh_host }}'
#      port: 22
#      state: started
#      timeout: 60
#    delegate_to: hypervisor

  ### TODO: Modify the image to our needs here

  ### TODO: We have to use a 1min delay otherwise Ansible on CentOS 7 bails out
#  - name: Power off
#    raw: shutdown -P +1 "Shutting down system for image"
#
#  - name: Wait for the system to power off
#    virt:
#      guest: '{{ inventory_hostname }}'
#      command: status
#    register: result
#    until: result.status == 'shutdown'
#    retries: 30
#    delay: 5
#    delegate_to: hypervisor

  - name: Download VM Qcow2 image
    fetch:
      src: '{{ image_dir }}/{{ inventory_hostname }}.qcow2'
      dest: '{{ vm_image }}'
      flat: yes
    delegate_to: hypervisor
